@model BillBindingModel


@{
    ViewData["Title"] = "Create Bill";
}

<h4>Bill</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            @{
                var quantity = 0;
            }
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <h3>Name: @ViewBag.UserName</h3>
            <div class="form-group">
                <input asp-for="Id" class="form-control" type="hidden" value="@Model.Id" />
            </div>
            <div class="form-group">
                <input asp-for="UserId" class="form-control" type="hidden" value="@Model.UserId" />
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" type="tel" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Note" class="control-label"></label>
                <input asp-for="Note" class="form-control" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>          
            <div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                #
                            </th>
                            <th>
                                Drink
                            </th>
                            <th>Quantity</th>
                            <th>Toppings</th>
                            <th>Size</th>
                            <th>Price</th>
                            <th>Payment</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.OrderDetails.Count; ++i)
                        {
                            var detail = Model.OrderDetails.ElementAt(i);
                            quantity += detail.Quantity;
                            <tr>
                                <td>@(i + 1)</td>
                                <td>@(detail.Drink.Name)</td>
                                <td>@detail.Quantity</td>
                                <td>

                                    @foreach (var topping in detail.Toppings)
                                    {
                                        <p>@topping.Name</p>
                                    }
                                </td>
                                <td>@detail.Size.ToString()</td>
                                <td>@((detail.Payment / detail.Quantity).FormatNumber())</td>
                                <td>@detail.Payment.FormatNumber()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <h4>Payment: @ViewBag.Total</h4>
                <input asp-for="Payment" class="form-control" type="hidden" value="@ViewBag.Total" />
            </div>
            <div class="form-group">
                <button asp-action="Create" asp-controller="Bills" asp-route-id="@Model.Id">Order</button>               
            </div>
            <div class="form-group">
                <input asp-for="Quantity" class="form-control" type="hidden" value="@quantity" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="Home">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
