@model Project.Models.OrderDetail

@{
    ViewData["Title"] = "Order-detail";
    decimal priceM = ViewBag.Price + 5000;
    decimal priceL = ViewBag.Price + 10000;
    decimal prieS = ViewBag.Price;
    var s = prieS.FormatNumber();
    var m = priceM.FormatNumber();
    var l = priceL.FormatNumber();
    double priceS= 0.00;
    double priceM =  5.00;
    double priceL =  10.00;
    string s = priceS.ToString();
    string m = priceM.ToString();
    string l = priceL.ToString();
    var selectItems = new[]
    {
        new {Text="S - " + s, Value=DrinkSize.S},
        new { Text = "M - " + m, Value = DrinkSize.M },
        new { Text = "L - " + l, Value = DrinkSize.L }
    };
    var selectSize = new SelectList(selectItems, "Value", "Text");
}

<h1>Lazy Bee</h1>
<h4>Order-Detail</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Order">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <h1>@ViewBag.Drink</h1>
            </div>
            <div class="form-group" id="button-form">
                <div class="value-button" id="decrease" onclick="decreaseValue()" value="Decrease Value">-</div>
                <input class="quantity" min="1" name="quantity" value="1" type="number" id="number" max="@ViewBag.Quantity">
                <div class="value-button" id="increase" onclick="increaseValue()" value="Increase Value">+</div>
            </div>
            <div class="form-group">
                <label asp-for="Toppings" class="control-label"></label>
                <div>
                    @{
                        List<Topping> toppings = ViewBag.Toppings;
                    }
                    @foreach (var topping in toppings)
                    {
                        if (topping.Quantity <= 0)
                        {
                            <div class="form-check form-check-inline" hidden>
                                <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="@topping.Id" name="selectedToppings" />
                                <label class="form-check-label" for="inlineCheckbox1">
                                    <p>@topping.Name: @topping.Price.FormatNumber()</p>
                                </label>
                            </div>
                        }
                        else
                        {
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="@topping.Id" name="selectedToppings" />
                                <label class="form-check-label" for="inlineCheckbox1">
                                    <p>@topping.Name: @topping.Price.FormatNumber()</p>
                                </label>
                            </div>
                        }                      
                    }
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="checkbox" id="inlineCheckbox1" onchange="updateTotal()" value="@topping.Id" name="selectedToppings" data-price="@topping.Price" />
                            <label class="form-check-label" for="inlineCheckbox1">
                                <p>@topping.Name: @topping.Price</p>
                            </label>
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Size" class="control-label"></label>
                <select asp-for="Size" class="form-control" asp-items="selectSize" onchange="updateTotal()"></select>
                <br />
                <div>
                    <h5>Total:<span id="total">@ViewBag.Price</span> </h5>
                </div>
                <div class="form-group">
                    <td>
                        <input type="submit" value="Add to cart" class="btn btn-primary" />
                        <input type="submit" value="Cancel" class="btn btn-primary" asp-action="Order" asp-controller="Drinks" />
                    </td>
                </div>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<style>
    .value-button {
        display: inline-block;
        border: 1px solid #ddd;
        margin-bottom: 5.5px;
        width: 40px;
        height: 40px;
        text-align: center;
        vertical-align: middle;
        padding: 5px 5px 5px 5px;
        background: #eee;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        .value-button:hover {
            cursor: pointer;
        }

    form #decrease {
        margin-right: -4px;
        border-radius: 8px 0 0 8px;      
    }

    form #increase {
        margin-left: -4px;
        border-radius: 0 8px 8px 0;       
    }

    form #input-wrap {
        margin: 0px;
        padding: 0px;
    }

    input#number {
        text-align: center;
        border: none;
        border-top: 1px solid #ddd;
        border-bottom: 1px solid #ddd;
        margin: 0px;
        width: 40px;
        height: 40px;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function increaseValue() {
            var value = parseInt(document.getElementById('number').value, 10);
            value = isNaN(value) ? 0 : value;
            if (value >= @ViewBag.Quantity) {
                document.getElementById("decrease").disabled = true;
            } else {
                value++;
                document.getElementById('number').value = value;
                updateTotal();
            }
        }

        function decreaseValue() {
            var value = parseInt(document.getElementById('number').value, 10);
            value = isNaN(value) ? 0 : value;
            value < 1 ? value = 1 : '';
            value--;
            document.getElementById('number').value = value;
            updateTotal();
        }
        function updateTotal() {
            var checkboxes = document.getElementsByName('selectedToppings');
            quantity = document.getElementById('number').value ;
            var size = document.getElementById('Size').value;
            var price;
            if (size === "S") {
                price = 0;
            } else if (size === "M") {
                price = 5;
            } else if (size === "L") {
                price = 10;
            } else {
                price = 0;
            }
            PriceTopp=0
            for (var i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked) {
                    var toppingPrice = parseFloat(checkboxes[i].getAttribute('data-price'));
                    PriceTopp += toppingPrice;
                }
            }
            var total = quantity * (@ViewBag.Price+price + PriceTopp);
            document.getElementById('total').textContent = total.toFixed(2);
        }
    </script>
}

